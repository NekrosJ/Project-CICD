variables:
  IMAGE_NAME: nekrosj47/projectcicd
  IMAGE_TAG: latest

stages:
  - install
  - build
  - test
  - deploy

# Cache node_modules to speed up the build
cache:
  paths:
    - node_modules/

# Job to install dependencies
install:
  stage: install
  image: node:16
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

# Job to build the application and Docker image
build:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker info
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - pwd
    - ls -al
    - docker build -f Dockerfile -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  only:
    - master

# Job to run tests
test:
  stage: test
  image: node:16
  script:
    - npm run test  # Run your tests
  dependencies:
    - install

# # Optional deploy job (if needed)
# deploy:
#   stage: deploy
#   before_script:
#     - chmod 400 $SSH_KEY  # If deploying over SSH and using an SSH key
#   script:
#     - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@161.35.223.117 "
#         docker login -u $REGISTRY_USER -p $REGISTRY_PASS &&
#         docker ps -aq | xargs docker stop | xargs docker rm &&
#         docker run -d -p 5000:5000 $IMAGE_NAME:$IMAGE_TAG"
