variables:
  IMAGE_NAME: nekrosj47/projectcicd
  IMAGE_TAG: react-app-1.0
  AWS_REGION: "us-east-1"
  SSH_USER: "ec2-user"
  EC2_PUBLIC_IP: "3.95.208.126"
  DOCKER_TLS_CERTDIR: "/certs"

cache:
  paths:
    - node_modules/
    - .npm/
    - dist/

stages:
  - install
  - build
  - test
  - deploy

# Cài đặt dependencies
install:
  stage: install
  image: node:16
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/

# Build Docker image và push lên Docker Hub
build:
  stage: build
  image: docker:27.3.1-cli
  services:
    - docker:27.3.1-dind
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

# Chạy kiểm tra unit test
test:
  stage: test
  image: node:16
  before_script:
    - apt-get update && apt-get install -y build-essential
  script:
    - npm install
    - npm run test
  dependencies:
    - install

# Deploy ứng dụng lên AWS EC2
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    # Cài đặt SSH client
    - apk add --no-cache openssh-client bash
    # Tạo thư mục .ssh và thiết lập khóa riêng
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    # Thêm EC2 IP vào danh sách known_hosts
    - ssh-keyscan -H $EC2_PUBLIC_IP >> ~/.ssh/known_hosts
    # Kiểm tra kết nối SSH
    - ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USER@$EC2_PUBLIC_IP "echo 'SSH Connection Successful'"
  script:
    # Thiết lập quyền thực thi cho script và chạy script triển khai
    - chmod +x deploy.sh
    - ./deploy.sh $EC2_PUBLIC_IP $IMAGE_NAME $IMAGE_TAG
  only:
    - master
  dependencies:
    - build
